# app/templates.py

HOME_PAGE_TEMPLATE = """
<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Finbee AI - Financial Analysis</title><script src="https://cdn.tailwindcss.com"></script><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700;800&display=swap" rel="stylesheet"><style>body{font-family:'Manrope',sans-serif;background-color:#000;color:#E5E7EB}.card-bg{background-color:#111;border:1px solid #333;transition:all .3s ease}.card-bg:hover{border-color:#fff;transform:translateY(-5px)}</style></head><body class="antialiased"><div class="relative z-10"><header class="container mx-auto px-6 py-4"><div class="flex items-center justify-between"><div class="flex items-center gap-3"><div class="w-10 h-10 rounded-lg bg-white flex items-center justify-center shrink-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a2.828 2.828 0 0 0-2.828 2.828V8.5h-1.672a2 2 0 0 0-1.732 1L3.94 12.5a2 2 0 0 0 0 2l2.828 3.172a2 2 0 0 0 1.732 1h1.672v3.672A2.828 2.828 0 1 0 12 22a2.828 2.828 0 0 0 2.828-2.828V18.5h1.672a2 2 0 0 0 1.732-1l2.828-3.172a2 2 0 0 0 0-2l-2.828-3.172a2 2 0 0 0-1.732-1H14.828V4.828A2.828 2.828 0 0 0 12 2z"/></svg></div><h1 class="text-xl font-bold text-white">Finbee AI</h1></div><a href="/chat" class="px-5 py-2.5 text-sm font-semibold text-white bg-black border border-gray-700 rounded-lg hover:bg-white hover:text-black transition-colors duration-200">Launch App</a></div></header><main class="text-center container mx-auto px-6 py-24 md:py-32"><h1 class="text-4xl md:text-6xl font-extrabold text-white leading-tight mb-4">Your Personal <span class="text-gray-400">Wall Street</span> Analyst</h1><p class="text-lg md:text-xl text-gray-400 max-w-3xl mx-auto mb-8">Leverage institutional-grade AI to analyze market trends, get direct financial advice, and execute your strategy.</p><a href="/chat" class="inline-block px-8 py-4 text-lg font-bold text-black bg-white rounded-lg hover:bg-gray-300 transition-colors duration-300">Start Analyzing</a></main></div><section class="py-20 sm:py-24"><div class="container mx-auto px-6"><div class="text-center mb-12"><h2 class="text-3xl md:text-4xl font-bold text-white">Alpha-Driven Intelligence</h2><p class="text-gray-400 mt-2">No disclaimers. No hesitation. Just actionable insights.</p></div><div class="grid md:grid-cols-3 gap-8"><div class="card-bg p-8 rounded-xl"><h3 class="text-xl font-bold text-white mb-2">Real-Time Market Analysis</h3><p class="text-gray-400">Get immediate, opinionated analysis on market-moving news and data releases.</p></div><div class="card-bg p-8 rounded-xl"><h3 class="text-xl font-bold text-white mb-2">Direct Stock Recommendations</h3><p class="text-gray-400">Ask "Should I buy NVDA?" and get a direct answer based on current data and trends.</p></div><div class="card-bg p-8 rounded-xl"><h3 class="text-xl font-bold text-white mb-2">Sophisticated Charting</h3><p class="text-gray-400">Visualize complex data comparisons with clean, professional-grade charting tools.</p></div></div></div></section><footer class="border-t border-gray-900"><div class="container mx-auto px-6 py-8 text-center text-gray-500"><p>Â© 2025 Finbee AI. All Rights Reserved.</p></div></footer></body></html>
"""

CHAT_PAGE_TEMPLATE = """
<!DOCTYPE html><html lang="en" class="h-full"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Finbee AI Analyst</title><script src="https://cdn.tailwindcss.com"></script><script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/3.0.11/purify.min.js"></script><script src="https://cdn.jsdelivr.net/npm/chart.js"></script><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet"><style>:root{--bg-primary:#131314;--bg-secondary:#1E1F20;--bg-tertiary:#2C2D2E;--border-color:#262626;--text-primary:#EAEAEA;--text-secondary:#A0A0A0}body{font-family:'Inter',sans-serif;background-color:var(--bg-primary);color:var(--text-primary);overflow-y:hidden}.custom-scrollbar::-webkit-scrollbar{width:6px}.custom-scrollbar::-webkit-scrollbar-track{background:transparent}.custom-scrollbar::-webkit-scrollbar-thumb{background:#333;border-radius:3px}.markdown-content p:last-child{margin-bottom:0}.markdown-content code:not(pre > code){background-color:var(--bg-secondary);padding:.2em .4em;margin:0;font-size:85%;border-radius:6px}.markdown-content pre{background-color:var(--bg-secondary);padding:1em;border-radius:8px;overflow-x:auto}.markdown-content h1,.markdown-content h2,.markdown-content h3{font-weight:600;margin-top:1.2em;margin-bottom:.6em}.markdown-content a{color:#5DADE2;text-decoration:none}.markdown-content a:hover{text-decoration:underline}.markdown-content blockquote{border-left:4px solid var(--border-color);padding-left:1em;margin-left:0;color:var(--text-secondary)}#sidebar{transition:width .3s ease-in-out}.sidebar-text{transition:opacity .2s ease-in-out}.message-actions button:hover{background-color:var(--bg-tertiary)}.chat-icon{width:40px;height:40px;border-radius:9999px;display:flex;align-items:center;justify-content:center;flex-shrink:0}.logo-glow{animation:logo-glow-animation 2s infinite ease-in-out}@keyframes logo-glow-animation{0%,100%{box-shadow:0 0 2px #fff,0 0 5px #fff,0 0 8px #fff}50%{box-shadow:0 0 8px #fff,0 0 15px #fff,0 0 25px #fff}}.dot-wave{display:flex;align-items:center}.dot-wave span{width:6px;height:6px;margin:0 2px;background-color:var(--text-secondary);border-radius:50%;animation:dot-wave-animation 1.4s infinite ease-in-out}.dot-wave span:nth-child(2){animation-delay:-1.2s}.dot-wave span:nth-child(3){animation-delay:-1s}@keyframes dot-wave-animation{0%,60%,100%{transform:initial}30%{transform:translateY(-8px)}}</style></head><body class="h-full antialiased"><div id="app" class="relative flex h-full w-full"><aside id="sidebar" class="flex flex-col bg-black p-4 shrink-0 h-full z-30 w-72"><div class="flex items-center justify-between mb-8 shrink-0 h-8"><a href="/" class="flex items-center gap-3 overflow-hidden"><div class="w-8 h-8 rounded-lg bg-white flex items-center justify-center shrink-0"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a2.828 2.828 0 0 0-2.828 2.828V8.5h-1.672a2 2 0 0 0-1.732 1L3.94 12.5a2 2 0 0 0 0 2l2.828 3.172a2 2 0 0 0 1.732 1h1.672v3.672A2.828 2.828 0 1 0 12 22a2.828 2.828 0 0 0 2.828-2.828V18.5h1.672a2 2 0 0 0 1.732-1l2.828-3.172a2 2 0 0 0 0-2l-2.828-3.172a2 2 0 0 0-1.732-1H14.828V4.828A2.828 2.828 0 0 0 12 2z"/></svg></div><span class="sidebar-text text-lg font-bold text-white whitespace-nowrap">Finbee</span></a></div><button id="new-chat-button" class="w-full flex items-center justify-start gap-3 rounded-md px-3 py-2 mb-4 text-sm font-medium text-text-primary bg-bg-secondary hover:bg-bg-tertiary transition-colors duration-200"><svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="shrink-0"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg><span class="sidebar-text truncate">New Chat</span></button><div id="conversation-list" class="flex-1 overflow-y-auto custom-scrollbar -mr-4 pr-4"></div></aside><main class="flex-1 flex flex-col bg-bg-primary h-full relative"><button id="sidebar-toggle" class="absolute top-4 left-4 z-20 p-2 text-text-secondary hover:text-white rounded-md"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line></svg></button><div class="flex-1 flex flex-col h-full overflow-hidden"><div id="content-container" class="flex-1 flex flex-col items-center justify-center relative"><div id="empty-state" class="flex flex-col items-center justify-center h-full w-full text-center px-4"><div class="w-20 h-20 rounded-2xl bg-white flex items-center justify-center shrink-0 mb-6"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a2.828 2.828 0 0 0-2.828 2.828V8.5h-1.672a2 2 0 0 0-1.732 1L3.94 12.5a2 2 0 0 0 0 2l2.828 3.172a2 2 0 0 0 1.732 1h1.672v3.672A2.828 2.828 0 1 0 12 22a2.828 2.828 0 0 0 2.828-2.828V18.5h1.672a2 2 0 0 0 1.732-1l2.828-3.172a2 2 0 0 0 0-2l-2.828-3.172a2 2 0 0 0-1.732-1H14.828V4.828A2.828 2.828 0 0 0 12 2z"/></svg></div><h1 class="text-3xl font-semibold text-white mb-2">Finbee Analyst</h1><p class="text-text-secondary">Start a new chat to begin.</p></div><div id="chat-state" class="hidden absolute top-0 left-0 w-full h-full"><div id="chat-container-wrapper" class="h-full overflow-y-auto pt-16 pb-32 px-4 md:px-6 custom-scrollbar"><div id="chat-container" class="w-full max-w-3xl mx-auto space-y-8"></div></div></div></div><div class="w-full max-w-3xl mx-auto p-4 md:pb-8 shrink-0"><div class="relative bg-bg-secondary border border-border-color rounded-2xl flex items-center p-2"><textarea id="chat-input" rows="1" class="w-full bg-transparent pl-2 pr-10 py-2 text-md text-text-primary placeholder-text-secondary focus:outline-none custom-scrollbar resize-none" placeholder="Ask a question or request an analysis..."></textarea><button id="send-button" class="absolute right-3 top-1/2 -translate-y-1/2 p-2 bg-bg-tertiary text-white rounded-full hover:bg-gray-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"><svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="currentColor"><path d="M3.478 2.405a.75.75 0 00-.926.94l2.432 7.905H13.5a.75.75 0 010 1.5H4.984l-2.432 7.905a.75.75 0 00.926.94 60.519 60.519 0 0018.445-8.986.75.75 0 000-1.218A60.517 60.517 0 003.478 2.405z"/></svg></button></div></div></div></main></div><script>
document.addEventListener('DOMContentLoaded', () => {
    const state = { conversations: {}, activeConversationId: null, sessionId: 'session_' + Math.random().toString(36).substr(2, 9) };
    const dom = { sidebar: document.getElementById('sidebar'), sidebarToggle: document.getElementById('sidebar-toggle'), newChatButton: document.getElementById('new-chat-button'), conversationList: document.getElementById('conversation-list'), emptyState: document.getElementById('empty-state'), chatState: document.getElementById('chat-state'), chatContainer: document.getElementById('chat-container'), chatInput: document.getElementById('chat-input'), sendButton: document.getElementById('send-button'), };
    const icons = { analyst: `<div class="chat-icon bg-white"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a2.828 2.828 0 0 0-2.828 2.828V8.5h-1.672a2 2 0 0 0-1.732 1L3.94 12.5a2 2 0 0 0 0 2l2.828 3.172a2 2 0 0 0 1.732 1h1.672v3.672A2.828 2.828 0 1 0 12 22a2.828 2.828 0 0 0 2.828-2.828V18.5h1.672a2 2 0 0 0 1.732-1l2.828-3.172a2 2 0 0 0 0-2l-2.828-3.172a2 2 0 0 0-1.732-1H14.828V4.828A2.828 2.828 0 0 0 12 2z"/></svg></div>`, user: `<div class="chat-icon bg-bg-tertiary"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg></div>` };
    const persistence = { save() { localStorage.setItem('finbee_conversations', JSON.stringify(state.conversations)); localStorage.setItem('finbee_active_id', state.activeConversationId); localStorage.setItem('finbee_sidebar_collapsed', dom.sidebar.classList.contains('w-16')); }, load() { const savedConversations = localStorage.getItem('finbee_conversations'); const savedActiveId = localStorage.getItem('finbee_active_id'); const isCollapsed = localStorage.getItem('finbee_sidebar_collapsed') === 'true'; if (savedConversations) state.conversations = JSON.parse(savedConversations); if (savedActiveId && state.conversations[savedActiveId]) state.activeConversationId = savedActiveId; if (isCollapsed) ui.toggleSidebar(true); } };
    const api = { async createConversation() { const response = await fetch('/api/conversations', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ sessionId: state.sessionId }) }); if (!response.ok) throw new Error('Failed to create conversation.'); return response.json(); }, async sendMessage(conversationId, message) { const url = `/api/conversations/${conversationId}/messages?sessionId=${state.sessionId}`; const response = await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ message: message }) }); if (!response.ok) throw new Error('Failed to send message.'); return response.json(); } };
    const ui = { initialize() { persistence.load(); this.setupEventListeners(); this.renderConversationList(); this.updateChatView(); }, setupEventListeners() { dom.sidebarToggle.addEventListener('click', () => this.toggleSidebar()); dom.newChatButton.addEventListener('click', handlers.handleNewChat); dom.conversationList.addEventListener('click', handlers.handleConversationSelect); dom.sendButton.addEventListener('click', handlers.handleSendMessage); dom.chatInput.addEventListener('keydown', (e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); handlers.handleSendMessage(); } }); dom.chatInput.addEventListener('input', this.autoResizeInput); dom.chatContainer.addEventListener('click', (e) => { const copyButton = e.target.closest('.copy-button'); if (copyButton) this.copyToClipboard(copyButton.dataset.text, copyButton); }); }, toggleSidebar(isInitLoad = false) { const isCurrentlyCollapsed = dom.sidebar.classList.contains('w-16'); const shouldCollapse = !isInitLoad ? !isCurrentlyCollapsed : isCurrentlyCollapsed; if (shouldCollapse) { dom.sidebar.classList.replace('w-72', 'w-16'); document.querySelectorAll('.sidebar-text').forEach(el => el.classList.add('opacity-0', 'hidden')); } else { dom.sidebar.classList.replace('w-16', 'w-72'); document.querySelectorAll('.sidebar-text').forEach(el => el.classList.remove('opacity-0', 'hidden')); } if (!isInitLoad) { persistence.save(); } }, updateChatView() { const conversation = state.conversations[state.activeConversationId]; if (conversation) { dom.emptyState.classList.add('hidden'); dom.chatState.classList.remove('hidden'); dom.chatContainer.innerHTML = ''; conversation.messages.forEach(msg => this.appendMessage(msg.role, msg.text)); } else { dom.emptyState.classList.remove('hidden'); dom.chatState.classList.add('hidden'); dom.chatContainer.innerHTML = ''; } this.scrollToBottom(true); }, renderConversationList() { dom.conversationList.innerHTML = ''; const sortedConversations = Object.values(state.conversations).sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0)); sortedConversations.forEach(convo => { const isActive = convo.id === state.activeConversationId; const item = document.createElement('a'); item.href = '#'; item.dataset.id = convo.id; item.className = `w-full flex items-center justify-start gap-3 rounded-md px-3 py-2 text-sm font-medium transition-colors duration-200 overflow-hidden ${isActive ? 'bg-bg-tertiary text-white' : 'text-text-secondary hover:bg-bg-tertiary'}`; item.innerHTML = ` <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="shrink-0"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg> <span class="sidebar-text truncate">${convo.title}</span> `; dom.conversationList.appendChild(item); }); if (dom.sidebar.classList.contains('w-16')) { document.querySelectorAll('.sidebar-text').forEach(el => el.classList.add('hidden', 'opacity-0')); } }, appendMessage(role, text) { const messageWrapper = document.createElement('div'); if (role === 'user') { messageWrapper.className = 'w-full flex items-start gap-3 justify-end'; messageWrapper.innerHTML = ` <div class="bg-bg-tertiary text-text-primary rounded-xl px-4 py-2.5 max-w-xl"> ${DOMPurify.sanitize(text)} </div> ${icons.user}`; } else { messageWrapper.className = 'w-full flex items-start gap-3'; let contentHtml = DOMPurify.sanitize(marked.parse(text)); let graphData = null; if (text.includes('```json')) { try { const jsonString = text.substring(text.indexOf('```json') + 7, text.lastIndexOf('```')).trim(); const parsedJson = JSON.parse(jsonString); if (parsedJson.graph_data) { graphData = parsedJson.graph_data; const textWithoutJson = text.replace(/```json[\\s\\S]*?```/, '').trim(); contentHtml = DOMPurify.sanitize(marked.parse(textWithoutJson)); } } catch (e) { console.error("Could not parse graph JSON", e); } } const canvasId = graphData ? `chart-${Date.now()}` : ''; const graphCanvasHtml = graphData ? `<div class="bg-black border border-border-color p-4 rounded-lg mt-4 w-full h-96"><canvas id="${canvasId}"></canvas></div>` : ''; messageWrapper.innerHTML = ` ${icons.analyst} <div class="flex flex-col items-start gap-3 w-full"> <div class="markdown-content text-text-primary max-w-full"> ${contentHtml} </div> ${graphCanvasHtml} <div class="message-actions flex items-center gap-2 text-text-secondary"> <button class="copy-button p-1.5 rounded-md hover:bg-bg-tertiary" title="Copy" data-text="${encodeURIComponent(text)}"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg> </button> </div> </div>`; if (graphData) { setTimeout(() => this.renderChart(graphData, canvasId), 0); } } dom.chatContainer.appendChild(messageWrapper); }, renderChart(graphData, canvasId) { const ctx = document.getElementById(canvasId)?.getContext('2d'); if (!ctx) return; const datasets = graphData.series.map((s, i) => { const colors = [ { border: '#8B5CF6', gradient: ['rgba(139, 92, 246, 0.4)', 'rgba(139, 92, 246, 0.01)'] }, { border: '#34D399', gradient: ['rgba(52, 211, 153, 0.4)', 'rgba(52, 211, 153, 0.01)'] }, { border: '#F59E0B', gradient: ['rgba(245, 158, 11, 0.4)', 'rgba(245, 158, 11, 0.01)'] } ]; const color = colors[i % colors.length]; const gradient = ctx.createLinearGradient(0, 0, 0, 300); gradient.addColorStop(0, color.gradient[0]); gradient.addColorStop(1, color.gradient[1]); return { label: s.name, data: s.data.map(d => d.price), borderColor: color.border, backgroundColor: gradient, borderWidth: 2, tension: 0.4, pointRadius: 0, pointHoverRadius: 6, pointBackgroundColor: color.border, fill: true, } }); const allDates = [...new Set(graphData.series.flatMap(s => s.data.map(d => d.year)))].sort(); new Chart(ctx, { type: 'line', data: { labels: allDates, datasets: datasets }, options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'bottom', align: 'start', labels: { color: 'white', boxWidth: 12, padding: 20 } }, tooltip: { mode: 'index', intersect: false, backgroundColor: '#000', titleColor: '#fff', bodyColor: '#ddd', borderColor: '#333', borderWidth: 1, } }, scales: { x: { display: false }, y: { display: false } } } }); }, showTypingIndicator() { const indicatorEl = document.createElement('div'); indicatorEl.id = 'typing-indicator'; indicatorEl.className = 'w-full flex items-start gap-3'; indicatorEl.innerHTML = ` <div class="chat-icon bg-white logo-glow"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a2.828 2.828 0 0 0-2.828 2.828V8.5h-1.672a2 2 0 0 0-1.732 1L3.94 12.5a2 2 0 0 0 0 2l2.828 3.172a2 2 0 0 0 1.732 1h1.672v3.672A2.828 2.828 0 1 0 12 22a2.828 2.828 0 0 0 2.828-2.828V18.5h1.672a2 2 0 0 0 1.732-1l2.828-3.172a2 2 0 0 0 0-2l-2.828-3.172a2 2 0 0 0-1.732-1H14.828V4.828A2.828 2.828 0 0 0 12 2z"/></svg> </div> <div class="bg-bg-secondary rounded-xl px-4 py-3.5"> <div class="dot-wave"> <span></span><span></span><span></span> </div> </div> `; dom.chatContainer.appendChild(indicatorEl); this.scrollToBottom(); }, hideTypingIndicator() { document.getElementById('typing-indicator')?.remove(); }, scrollToBottom(instant = false) { const wrapper = document.getElementById('chat-container-wrapper'); if(wrapper) wrapper.scrollTo({ top: wrapper.scrollHeight, behavior: instant ? 'auto' : 'smooth' }); }, copyToClipboard(text, button) { navigator.clipboard.writeText(decodeURIComponent(text)).then(() => { const originalIcon = button.innerHTML; button.innerHTML = '<svg xmlns="[http://www.w3.org/2000/svg](http://www.w3.org/2000/svg)" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>'; setTimeout(() => { button.innerHTML = originalIcon; }, 2000); }); }, autoResizeInput() { dom.chatInput.style.height = 'auto'; dom.chatInput.style.height = `${dom.chatInput.scrollHeight}px`; } };
    const handlers = { async handleNewChat() { try { const newConvo = await api.createConversation(); state.conversations[newConvo.id] = newConvo; state.activeConversationId = newConvo.id; ui.updateChatView(); ui.renderConversationList(); persistence.save(); } catch (error) { console.error("Error creating new chat:", error); alert("Could not start a new chat. Please check the server connection."); } }, handleConversationSelect(e) { const target = e.target.closest('a'); if (target && target.dataset.id) { e.preventDefault(); state.activeConversationId = target.dataset.id; ui.updateChatView(); ui.renderConversationList(); persistence.save(); } }, async handleSendMessage() { const messageText = dom.chatInput.value.trim(); if (!messageText) return; if (!state.activeConversationId) { await handlers.handleNewChat(); } const conversation = state.conversations[state.activeConversationId]; if (!conversation) return; const userMessage = { role: 'user', text: messageText }; conversation.messages.push(userMessage); ui.appendMessage(userMessage.role, userMessage.text); ui.scrollToBottom(); dom.chatInput.value = ''; ui.autoResizeInput(); ui.showTypingIndicator(); try { const response = await api.sendMessage(state.activeConversationId, messageText); const aiMessage = response.message; conversation.messages.push(aiMessage); if (response.title) { conversation.title = response.title; ui.renderConversationList(); } ui.hideTypingIndicator(); ui.appendMessage(aiMessage.role, aiMessage.text); ui.scrollToBottom(); persistence.save(); } catch(error) { console.error("Error sending message:", error); ui.hideTypingIndicator(); const errorMessage = { role: 'assistant', text: 'Sorry, I was unable to get a response. Please try again.' }; conversation.messages.push(errorMessage); ui.appendMessage(errorMessage.role, errorMessage.text); ui.scrollToBottom(); persistence.save(); } }, };
    ui.initialize();
});
</script>
</body>
</html>
"""
